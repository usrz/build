<?xml version="1.0" encoding="UTF-8"?>
<!--+=======================================================================+
    | Copyright 2014 USRZ.com and Pier Paolo Fumagalli                      |
    +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
    | Licensed under the Apache License, Version 2.0 (the "License");       |
    | you may not use this file except in compliance with the License.      |
    | You may obtain a copy of the License at                               |
    |                                                                       |
    |  http://www.apache.org/licenses/LICENSE-2.0                           |
    |                                                                       |
    | Unless required by applicable law or agreed to in writing, software   |
    | distributed under the License is distributed on an "AS IS" BASIS,     |
    | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       |
    | implied. See the License for the specific language governing          |
    | permissions and limitations under the License.                        |
    +=======================================================================+-->

<project xmlns:ivy="antlib:org.apache.ivy.ant">

  <!--+====================================================================+
      | VERSION                                                            |
      +====================================================================+ -->
  <target name="publish.version"
          unless="task.executed.publish.version">
    <property name="task.executed.publish.version" value="true"/>

    <fail unless="ivy.revision">Missing "ivy.revision" property</fail>
    <fail unless="ivy.buildNumber">Missing "ivy.buildNumber" property</fail>

    <property name="publish.version" value="${ivy.revision}.${ivy.buildNumber}"/>
  </target>

  <!--+====================================================================+
      | PREPARE ARCHIVES FOR A FULL DISTRIBUTION                           |
      +====================================================================+ -->

  <!-- Archive sources -->
  <target name="publish.archive.sources"
          unless="task.executed.publish.archive.sources">
    <property name="task.executed.publish.archive.sources" value="true"/>
    <zip destfile="${targetdir}/archives/${ivy.module}-src.zip"
         basedir="${sourcedir}/main"
         filesonly="true" />
  </target>

  <!-- Archive javadocs -->
  <target name="publish.archive.javadoc"
          depends="javadoc"
          unless="task.executed.publish.archive.javadoc">
    <property name="task.executed.publish.archive.javadoc" value="true"/>
    <zip destfile="${targetdir}/archives/${ivy.module}-doc.zip"
         basedir="${targetdir}/docs"
         filesonly="true" />
  </target>

  <!-- Archive classes -->
  <target name="publish.archive.classes"
          depends="compile"
          unless="task.executed.publish.archive.classes">
    <property name="task.executed.publish.archive.classes" value="true"/>
    <jar destfile="${targetdir}/archives/${ivy.module}-bin.jar"
         basedir="${targetdir}/main"
         filesonly="true">
      <manifest>
        <attribute name="Implementation-Vendor" value="${ivy.organisation}"/>
        <attribute name="Implementation-Title" value="${ivy.module}"/>
        <attribute name="Implementation-Version" value="${ivy.revision}"/>
      </manifest>
    </jar>
  </target>

  <!-- Archive everything -->
  <target name="publish.archive"
          depends="publish.archive.sources,publish.archive.classes,publish.archive.javadoc"
          unless="task.executed.publish.archive">
    <property name="task.executed.publish.archive" value="true"/>
  </target>

  <!--+====================================================================+
      | IVY PUBLISHING                                                     |
      +====================================================================+ -->

  <!-- Publish via Ivy -->
  <target name="publish.ivy"
          depends="test,publish.version,publish.archive"
          description="Publish the Ivy module artifacts"
          unless="task.executed.publish.ivy">
    <property name="task.executed.publish.ivy" value="true"/>

    <!-- Publish our Ivy files -->
    <ivy:deliver deliverpattern="${targetdir}/ivy-release.xml"
                 pubrevision="${publish.version}"
                 pubdate="${ivy.timestamp}"
                 status="release"
                 conf="*(public)"/>

  </target>

  <!--+====================================================================+
      | PUBLISH ARCHIVES ON GITHUB AS A NEW RELEASE                        |
      +====================================================================+ -->

  <!-- Publish on GitHub -->
  <target name="publish.github"
          depends="test,publish.version,publish.ivy"
          unless="task.executed.publish.github">
    <property name="task.executed.publish.github" value="true"/>

    <!-- Dump out Node's version -->
    <exec failonerror="true" executable="node" outputproperty="node.version">
      <arg value="-v"/>
    </exec>
    <echo message="Node version: ${node.version}"/>

    <!-- Create release -->
    <exec failonerror="true" executable="node">
      <arg value="${builddir}/githubber.js"/>
      <arg value="release"/>
      <arg value="--tag=${publish.version}"/>
      <arg value="--body=Release ${publish.version}"/>
    </exec>

    <!-- Upload sources -->
    <exec failonerror="true" executable="node" logError="true" outputproperty="github.src.url">
      <arg value="${builddir}/githubber.js"/>
      <arg value="asset"/>
      <arg value="--tag=${publish.version}"/>
      <arg value="--file=${targetdir}/archives/${ivy.module}-src.zip"/>
      <arg value="--file-name=sources-${publish.version}.zip"/>
    </exec>

    <!-- Upload documentation -->
    <exec failonerror="true" executable="node" logError="true" outputproperty="github.doc.url">
      <arg value="${builddir}/githubber.js"/>
      <arg value="asset"/>
      <arg value="--tag=${publish.version}"/>
      <arg value="--file=${targetdir}/archives/${ivy.module}-doc.zip"/>
      <arg value="--file-name=javadoc-${publish.version}.zip"/>
    </exec>

    <!-- Upload classes -->
    <exec failonerror="true" executable="node" logError="true" outputproperty="github.bin.url">
      <arg value="${builddir}/githubber.js"/>
      <arg value="asset"/>
      <arg value="--tag=${publish.version}"/>
      <arg value="--file=${targetdir}/archives/${ivy.module}-bin.jar"/>
      <arg value="--file-name=classes-${publish.version}.jar"/>
    </exec>

    <!-- XSLT to insert artifact URLs -->
    <xslt style="${builddir}/ivy-github.xslt"
          in="${targetdir}/ivy-release.xml"
          out="${targetdir}/ivy-github.xml">
      <param name="src" expression="${github.src.url}"/>
      <param name="doc" expression="${github.doc.url}"/>
      <param name="bin" expression="${github.bin.url}"/>
    </xslt>

    <!-- Upload ivy.xml -->
    <exec failonerror="true" executable="node" logError="true" outputproperty="github.ivy.url">
      <arg value="${builddir}/githubber.js"/>
      <arg value="asset"/>
      <arg value="--tag=${publish.version}"/>
      <arg value="--file=${targetdir}/ivy-github.xml"/>
      <arg value="--file-name=ivy.xml"/>
    </exec>

    <echo message="GitHub ivy.xml: ${github.ivy.url}"/>
    <echo message="GitHub classes: ${github.bin.url}"/>
    <echo message="GitHub sources: ${github.src.url}"/>
    <echo message="GitHub javadoc: ${github.doc.url}"/>

  </target>

  <!--+====================================================================+
      | OVERALL PUBLICATION TASK                                           |
      +====================================================================+ -->

  <!-- Publish Ivy to GitHub -->
  <target name="publish"
          depends="test,publish.ivy,publish.github"
          description="Publish the release to GitHub"
          unless="task.executed.publish">
    <property name="task.executed.publish" value="true"/>
  </target>

</project>
