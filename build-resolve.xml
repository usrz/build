<?xml version="1.0" encoding="UTF-8"?>
<!--+=======================================================================+
    | Copyright 2014 USRZ.com and Pier Paolo Fumagalli                      |
    +- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
    | Licensed under the Apache License, Version 2.0 (the "License");       |
    | you may not use this file except in compliance with the License.      |
    | You may obtain a copy of the License at                               |
    |                                                                       |
    |  http://www.apache.org/licenses/LICENSE-2.0                           |
    |                                                                       |
    | Unless required by applicable law or agreed to in writing, software   |
    | distributed under the License is distributed on an "AS IS" BASIS,     |
    | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       |
    | implied. See the License for the specific language governing          |
    | permissions and limitations under the License.                        |
    +=======================================================================+-->

<project xmlns:ivy="antlib:org.apache.ivy.ant">

  <!--+====================================================================+
      | LOAD IVY                                                           |
      +=================================================================== + -->

  <!-- Load Ivy's classes -->
  <taskdef resource="org/apache/ivy/ant/antlib.xml"
           uri="antlib:org.apache.ivy.ant"
           classpath="${builddir}/ivy-2.3.0.jar" />

  <!-- Set our "ivy.publish" property (if not set before) -->
  <property name="ivy.publications" value="${targetdir}/publications"/>
  <property name="ivy.dirPattern" value="[organisation]/[module]/[revision]"/>

  <!-- Allow use of cache only (helps in two steps build) -->
  <property name="ivy.useCacheOnly" value="false"/>

  <!-- Initialize Ivy -->
  <ivy:configure file="${builddir}/ivy-settings.xml" />

  <!--+====================================================================+
      | IVY-RELATED TASKS                                                  |
      +=================================================================== + -->

  <!-- Resolve all our dependencies -->
  <target name="resolve"
          unless="task.executed.resolve">
    <property name="task.executed.resolve" value="true"/>

    <!-- Resolve Ivy's descriptor fully -->
    <ivy:resolve useCacheOnly="${ivy.useCacheOnly}"/>
    <ivy:cachepath pathid="classpath.compile"
                   conf="compile"
                   type="bin" />
    <ivy:cachepath pathid="classpath.testing"
                   conf="testing"
                   type="bin" />
    <ivy:cachepath pathid="classpath.default"
                   conf="default"
                   type="bin" />

    <!-- Calculate a timestamp for publishing -->
    <tstamp>
      <format property="ivy.timestamp" pattern="yyyyMMddHHmmss"/>
    </tstamp>

  </target>

  <!-- Prepare Eclipse's .classpath file -->
  <target name="eclipse"
          depends="resolve"
          description="Create Eclipse's .classpath file"
          unless="task.executed.eclipse">
    <property name="task.executed.eclipse" value="true"/>

    <mkdir dir="${targetdir}" />
    <ivy:artifactreport tofile="${targetdir}/artifacts.xml"
                        log="download-only"/>
    <xslt style="${builddir}/ivy-eclipse.xslt"
          in="${targetdir}/artifacts.xml"
          out="${basedir}/.classpath" />
  </target>

  <!-- Dump a class path to a file -->
  <target name="classpath"
          depends="resolve"
          description="Create a set of .classpath.[mode].txt files"
          unless="task.executed.classpath">
    <property name="task.executed.classpath" value="true"/>

    <echo>Creating ${basedir}/.classpath.compile.txt</echo>
    <pathconvert pathsep="${line.separator}" property="classpath.compile.txt" refid="classpath.compile"/>
    <echo file="${basedir}/.classpath.compile.txt">${classpath.compile.txt}${line.separator}</echo>

    <echo>Creating ${basedir}/.classpath.testing.txt</echo>
    <pathconvert pathsep="${line.separator}" property="classpath.testing.txt" refid="classpath.testing"/>
    <echo file="${basedir}/.classpath.testing.txt">${classpath.testing.txt}${line.separator}</echo>

    <echo>Creating ${basedir}/.classpath.default.txt</echo>
    <pathconvert pathsep="${line.separator}" property="classpath.default.txt" refid="classpath.default"/>
    <echo file="${basedir}/.classpath.default.txt">${classpath.default.txt}${line.separator}${targetdir}/main${line.separator}</echo>
  </target>

</project>
